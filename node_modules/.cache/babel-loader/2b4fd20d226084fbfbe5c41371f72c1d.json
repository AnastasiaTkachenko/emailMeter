{"remainingRequest":"/Users/anastasia/Desktop/web проекты с моего сайта/emailMeter/node_modules/babel-loader/lib/index.js!/Users/anastasia/Desktop/web проекты с моего сайта/emailMeter/node_modules/eslint-loader/index.js??ref--14-0!/Users/anastasia/Desktop/web проекты с моего сайта/emailMeter/src/services/StepsMeterService.js","dependencies":[{"path":"/Users/anastasia/Desktop/web проекты с моего сайта/emailMeter/src/services/StepsMeterService.js","mtime":1645631037224},{"path":"/Users/anastasia/Desktop/web проекты с моего сайта/emailMeter/babel.config.js","mtime":1645352672000},{"path":"/Users/anastasia/Desktop/web проекты с моего сайта/emailMeter/node_modules/cache-loader/dist/cjs.js","mtime":1645635885110},{"path":"/Users/anastasia/Desktop/web проекты с моего сайта/emailMeter/node_modules/babel-loader/lib/index.js","mtime":1645635886032},{"path":"/Users/anastasia/Desktop/web проекты с моего сайта/emailMeter/node_modules/eslint-loader/index.js","mtime":1645635885229}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9hbmFzdGFzaWEvRGVza3RvcC93ZWIgXHUwNDNGXHUwNDQwXHUwNDNFXHUwNDM1XHUwNDNBXHUwNDQyXHUwNDRCIFx1MDQ0MSBcdTA0M0NcdTA0M0VcdTA0MzVcdTA0MzNcdTA0M0UgXHUwNDQxXHUwNDMwXHUwNDM4XHUwMzA2XHUwNDQyXHUwNDMwL2VtYWlsTWV0ZXIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IuanMiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCB7IHRva2VuIH0gZnJvbSAiQC92YXJpYWJsZXMiOwpleHBvcnQgdmFyIGdldFVzZXJzID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICB2YXIgX3JlZiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShmcm9tLCB0bykgewogICAgdmFyIF95aWVsZCRheGlvcyRnZXQsIGRhdGE7CgogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmdldCgnaHR0cHM6Ly9zdGVwLW1ldGVyLXBwNHB1YmxtZHEtZXouYS5ydW4uYXBwL3VzZXJzJywgewogICAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgIEF1dGhvcml6YXRpb246ICJUb2tlbiAiLmNvbmNhdCh0b2tlbiksCiAgICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBwYXJhbXM6IHsKICAgICAgICAgICAgICAgICd3b3Jrb3V0c19mcm9tJzogZnJvbSwKICAgICAgICAgICAgICAgICd3b3Jrb3V0c190byc6IHRvLAogICAgICAgICAgICAgICAgJ2xpbWl0JzogMTAwCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKCiAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgIF95aWVsZCRheGlvcyRnZXQgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICBkYXRhID0gX3lpZWxkJGF4aW9zJGdldC5kYXRhOwogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBkYXRhLnJlc3VsdHMpOwoKICAgICAgICAgIGNhc2UgNToKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlKTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiBnZXRVc2VycyhfeCwgX3gyKSB7CiAgICByZXR1cm4gX3JlZi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogIH07Cn0oKTsKZXhwb3J0IHZhciBnZXRVc2VyRGV0YWlscyA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgdmFyIF9yZWYyID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMih1c2VyTmFtZSkgewogICAgdmFyIF95aWVsZCRheGlvcyRnZXQyLCBkYXRhOwoKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMjsKICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmdldCgiaHR0cHM6Ly9zdGVwLW1ldGVyLXBwNHB1YmxtZHEtZXouYS5ydW4uYXBwLyIuY29uY2F0KHVzZXJOYW1lLCAiL3dvcmtvdXRzIiksIHsKICAgICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgICBBdXRob3JpemF0aW9uOiAiVG9rZW4gIi5jb25jYXQodG9rZW4pLAogICAgICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSk7CgogICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICBfeWllbGQkYXhpb3MkZ2V0MiA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICBkYXRhID0gX3lpZWxkJGF4aW9zJGdldDIuZGF0YTsKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIsIGRhdGEucmVzdWx0cyk7CgogICAgICAgICAgY2FzZSA1OgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlMik7CiAgfSkpOwoKICByZXR1cm4gZnVuY3Rpb24gZ2V0VXNlckRldGFpbHMoX3gzKSB7CiAgICByZXR1cm4gX3JlZjIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCk7"},{"version":3,"sources":["/Users/anastasia/Desktop/web проекты с моего сайта/emailMeter/src/services/StepsMeterService.js"],"names":["axios","token","getUsers","from","to","get","headers","Authorization","params","data","results","getUserDetails","userName"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,aAApB;AAEA,OAAO,IAAMC,QAAQ;AAAA,qEAAG,iBAAOC,IAAP,EAAaC,EAAb;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACCJ,KAAK,CAACK,GAAN,CAAU,kDAAV,EACjB;AACIC,cAAAA,OAAO,EAAE;AACLC,gBAAAA,aAAa,kBAAWN,KAAX,CADR;AAEL,gCAAgB;AAFX,eADb;AAKIO,cAAAA,MAAM,EAAC;AACH,iCAAiBL,IADd;AAEH,+BAAeC,EAFZ;AAGH,yBAAQ;AAHL;AALX,aADiB,CADD;;AAAA;AAAA;AACbK,YAAAA,IADa,oBACbA,IADa;AAAA,6CAabA,IAAI,CAACC,OAbQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAARR,QAAQ;AAAA;AAAA;AAAA,GAAd;AAgBP,OAAO,IAAMS,cAAc;AAAA,sEAAG,kBAAOC,QAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACLZ,KAAK,CAACK,GAAN,sDAAwDO,QAAxD,gBAA6E;AAC9FN,cAAAA,OAAO,EAAE;AACLC,gBAAAA,aAAa,kBAAWN,KAAX,CADR;AAEL,gCAAgB;AAFX;AADqF,aAA7E,CADK;;AAAA;AAAA;AACnBQ,YAAAA,IADmB,qBACnBA,IADmB;AAAA,8CAOnBA,IAAI,CAACC,OAPc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAdC,cAAc;AAAA;AAAA;AAAA,GAApB","sourcesContent":["import axios from 'axios'\nimport {token} from \"@/variables\";\n\nexport const getUsers = async (from, to) => {\n    const {data} = await axios.get('https://step-meter-pp4publmdq-ez.a.run.app/users',\n        {\n            headers: {\n                Authorization: `Token ${token}`,\n                'Content-Type': 'application/json'\n            },\n            params:{\n                'workouts_from': from,\n                'workouts_to': to,\n                'limit':100\n            },\n        });\n    return data.results;\n\n}\nexport const getUserDetails = async (userName) => {\n    const {data} = await axios.get(`https://step-meter-pp4publmdq-ez.a.run.app/${userName}/workouts`, {\n        headers: {\n            Authorization: `Token ${token}`,\n            'Content-Type': 'application/json'\n        },\n    });\n    return data.results;\n}\n\n\n"]}]}