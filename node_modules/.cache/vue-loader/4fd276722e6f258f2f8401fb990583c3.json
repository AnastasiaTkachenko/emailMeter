{"remainingRequest":"/Users/anastasia/Desktop/emailMeter/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anastasia/Desktop/emailMeter/src/views/ranking/Ranking.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/anastasia/Desktop/emailMeter/src/views/ranking/Ranking.vue","mtime":1645449076963},{"path":"/Users/anastasia/Desktop/emailMeter/node_modules/cache-loader/dist/cjs.js","mtime":1645449689927},{"path":"/Users/anastasia/Desktop/emailMeter/node_modules/babel-loader/lib/index.js","mtime":1645449690710},{"path":"/Users/anastasia/Desktop/emailMeter/node_modules/cache-loader/dist/cjs.js","mtime":1645449689927},{"path":"/Users/anastasia/Desktop/emailMeter/node_modules/vue-loader/lib/index.js","mtime":1645449690837}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7Z2V0VXNlcnN9IGZyb20gIkAvc2VydmljZXMvU3RlcHNNZXRlclNlcnZpY2UiOwppbXBvcnQgUmFua2luZ1RhYmxlIGZyb20gIkAvdmlld3MvcmFua2luZy9jb21wb25lbnRzL1JhbmtpbmdUYWJsZSI7CmltcG9ydCBtb21lbnQgZnJvbSAibW9tZW50IjsKaW1wb3J0IEZvb3RlciBmcm9tICJAL2NvbXBvbmVudHMvRm9vdGVyIjsKCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlJhbmtpbmciLAogIGNvbXBvbmVudHM6IHtSYW5raW5nVGFibGUsRm9vdGVyfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdXNlcnM6IFtdLAogICAgICB0b2RheTogbW9tZW50KCkuZm9ybWF0KCJZWVlZLU1NLUREIiksCiAgICAgIHllc3RlcmRheTogbW9tZW50KCkuc3VidHJhY3QoMSwgJ2RheXMnKS5mb3JtYXQoIllZWVktTU0tREQiKSwKICAgICAgd2Vla0FnbzogbW9tZW50KCkuc3VidHJhY3QoMSwgJ3dlZWtzJykuZm9ybWF0KCJZWVlZLU1NLUREIiksCiAgICAgIG1vbnRoQWdvOiBtb21lbnQoKS5zdWJ0cmFjdCgxLCAnbW9udGgnKS5mb3JtYXQoIllZWVktTU0tREQiKQoKICAgIH0KICB9LAogIG1vdW50ZWQoKSB7CiAgICB0aGlzLmdldERhdGEoKTsKICB9LAogIG1ldGhvZHM6IHsKCiAgICBhc3luYyBnZXREYXRhKCkgewogICAgICBjb25zdCBkYWlseSA9IGF3YWl0IGdldFVzZXJzKHRoaXMueWVzdGVyZGF5LCB0aGlzLnllc3RlcmRheSk7CiAgICAgIGNvbnNvbGUubG9nKCJoZWxsbyIpCiAgICAgIHRoaXMudXNlcnMgPSBkYWlseS5tYXAoZWwgPT4gewogICAgICAgIHJldHVybiB7aWQ6IGVsLmlkLCB1c2VybmFtZTogZWwudXNlcm5hbWUsIGRhaWx5OiBlbFsnYXZnX3N0ZXBzJ119CiAgICAgIH0pCgogICAgICBjb25zdCB3ZWVrbHkgPSBhd2FpdCBnZXRVc2Vycyh0aGlzLndlZWtBZ28sIHRoaXMudG9kYXkpOwogICAgICB3ZWVrbHkuZm9yRWFjaCgoZWwsIGlkeCkgPT4gdGhpcy51c2Vyc1tpZHhdLndlZWtseSA9IGVsWydhdmdfc3RlcHMnXSkKCiAgICAgIGNvbnN0IG1vbnRobHkgPSBhd2FpdCBnZXRVc2Vycyh0aGlzLm1vbnRoQWdvLCB0aGlzLnRvZGF5KTsKICAgICAgbW9udGhseS5mb3JFYWNoKChlbCwgaWR4KSA9PiB0aGlzLnVzZXJzW2lkeF0ubW9udGhseSA9IGVsWydhdmdfc3RlcHMnXSkKICAgICAgdGhpcy51c2VycyA9IHRoaXMudXNlcnMuc29ydCgoYSwgYikgPT4gYlsnbW9udGhseSddIC0gYVsnbW9udGhseSddKQoKICAgIH0KICB9Cn0K"},{"version":3,"sources":["Ranking.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"Ranking.vue","sourceRoot":"src/views/ranking","sourcesContent":["<template>\n  <div class=\"ranking\">\n    <div class=\"md:flex justify-between md:h-96 sm:px-36\">\n      <div class=\"w-full md:w-2/5  py-4 md:py-24 \"><img src=\"../../assets/img/logo.png\"\n                                                       class=\"max-w-4/5 mx-auto max-h-32  md:max-h-48\" alt=\"Logo\"></div>\n      <div class=\"w-full md:w-3/5 my-auto px-4\">\n        <p class=\"text-lg md:text-3xl lg:text-5xl sm:right-0.5\"> Welcome to Daily Steps Ranking.</p>\n        <p class=\"text-xs md:text-xl lg:text-2xl uppercase text-gray-400 md:uppercase mt-2 md:mt-4 md:ml-2 md:ml-10\"> Every step\n          counts. create your healthy future.</p>\n      </div>\n    </div>\n    <RankingTable  class=\"mt-4\" :data=\"users\"/>\n\n     <Footer/>\n  </div>\n</template>\n<script>\nimport {getUsers} from \"@/services/StepsMeterService\";\nimport RankingTable from \"@/views/ranking/components/RankingTable\";\nimport moment from \"moment\";\nimport Footer from \"@/components/Footer\";\n\n\nexport default {\n  name: \"Ranking\",\n  components: {RankingTable,Footer},\n  data() {\n    return {\n      users: [],\n      today: moment().format(\"YYYY-MM-DD\"),\n      yesterday: moment().subtract(1, 'days').format(\"YYYY-MM-DD\"),\n      weekAgo: moment().subtract(1, 'weeks').format(\"YYYY-MM-DD\"),\n      monthAgo: moment().subtract(1, 'month').format(\"YYYY-MM-DD\")\n\n    }\n  },\n  mounted() {\n    this.getData();\n  },\n  methods: {\n\n    async getData() {\n      const daily = await getUsers(this.yesterday, this.yesterday);\n      console.log(\"hello\")\n      this.users = daily.map(el => {\n        return {id: el.id, username: el.username, daily: el['avg_steps']}\n      })\n\n      const weekly = await getUsers(this.weekAgo, this.today);\n      weekly.forEach((el, idx) => this.users[idx].weekly = el['avg_steps'])\n\n      const monthly = await getUsers(this.monthAgo, this.today);\n      monthly.forEach((el, idx) => this.users[idx].monthly = el['avg_steps'])\n      this.users = this.users.sort((a, b) => b['monthly'] - a['monthly'])\n\n    }\n  }\n}\n</script>\n"]}]}