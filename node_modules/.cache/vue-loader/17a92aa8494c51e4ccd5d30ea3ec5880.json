{"remainingRequest":"/Users/anastasia/Desktop/emailMeter/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anastasia/Desktop/emailMeter/src/views/ranking/components/RankingTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/anastasia/Desktop/emailMeter/src/views/ranking/components/RankingTable.vue","mtime":1645474733248},{"path":"/Users/anastasia/Desktop/emailMeter/node_modules/cache-loader/dist/cjs.js","mtime":1645449689927},{"path":"/Users/anastasia/Desktop/emailMeter/node_modules/babel-loader/lib/index.js","mtime":1645449690710},{"path":"/Users/anastasia/Desktop/emailMeter/node_modules/cache-loader/dist/cjs.js","mtime":1645449689927},{"path":"/Users/anastasia/Desktop/emailMeter/node_modules/vue-loader/lib/index.js","mtime":1645449690837}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnUmFua2luZ1RhYmxlJywKICBwcm9wczogewogICAgZGF0YTogewogICAgICB0eXBlOiBBcnJheSwKICAgIH0sCiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY29sdW1uczogWwogICAgICAgIHsKICAgICAgICAgIHByb3A6ICdpZCcsCiAgICAgICAgICBsYWJlbDogJ0lkJwogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgcHJvcDogJ3VzZXJuYW1lJywKICAgICAgICAgIGxhYmVsOiAnTmFtZScKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIHByb3A6ICdtb250aGx5JywKICAgICAgICAgIGxhYmVsOiAnTW9udGgnCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICBwcm9wOiAnd2Vla2x5JywKICAgICAgICAgIGxhYmVsOiAnV2VlaycsCgogICAgICAgIH0sIHsKICAgICAgICAgIHByb3A6ICdkYWlseScsCiAgICAgICAgICBsYWJlbDogJ0RhaWx5JwogICAgICAgIH0sCiAgICAgIF0sCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CgogIH0KfQo="},{"version":3,"sources":["RankingTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"RankingTable.vue","sourceRoot":"src/views/ranking/components","sourcesContent":["<template>\n  <table class=\"min-w-full mb-16\">\n    <thead class=\"bg-gray-50\">\n    <tr>\n      <th class=\"px-2 py-2 md:px-6 md:py-3 text-left text-xs font-medium text-gray-500\" v-for=\"column in columns\"\n          :key=\"column.label\">\n        <div class=\"flex \"><span>{{ column.label }}</span>        </div>\n\n      </th>\n    </tr>\n    </thead>\n    <tbody class=\"bg-white\">\n    <tr class=\"bg-blue-200 border-b-4 border-gray-50 hover:bg-blue-300 cursor-pointer\" v-for=\"row in data\" :key=\"row.id\" > \n      <td class=\"px-2 py-2 md:px-6 md:py-2  whitespace-nowrap\" v-for=\"column in columns\" :key=\"column.prop\">\n        <router-link :to=\"'/'+ row.id\">\n        <!-- <router-link :to=\"{ name: '/' + row.id, params: { name: row.username } }\"> -->\n <div class=\"text-sm text-gray-900\"> {{ row[column.prop] }} </div> \n </router-link>\n      </td>\n    </tr>      \n\n    </tbody>\n  </table>\n</template>\n\n<script>\nexport default {\n  name: 'RankingTable',\n  props: {\n    data: {\n      type: Array,\n    },\n  },\n  data() {\n    return {\n      columns: [\n        {\n          prop: 'id',\n          label: 'Id'\n        },\n        {\n          prop: 'username',\n          label: 'Name'\n        },\n        {\n          prop: 'monthly',\n          label: 'Month'\n        },\n        {\n          prop: 'weekly',\n          label: 'Week',\n\n        }, {\n          prop: 'daily',\n          label: 'Daily'\n        },\n      ],\n    }\n  },\n  methods: {\n\n  }\n}\n</script>\n"]}]}